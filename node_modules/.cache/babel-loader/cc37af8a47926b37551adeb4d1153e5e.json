{"ast":null,"code":"import _slicedToArray from \"/Users/mamad/Desktop/it-logger-master/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mamad/Desktop/it-logger-master/src/components/logs/Logs.js\";\n// import React, { useEffect } from 'react';\n// import { connect } from 'react-redux';\n// import LogItem from './LogItem';\n// import Preloader from '../layout/Preloader';\n// import PropTypes from 'prop-types';\n// import { getLogs } from '../../actions/logActions';\n// const Logs = ({ log: { logs, loading }, getLogs }) => {\n//   useEffect(() => {\n//     getLogs();\n//     // eslint-disable-next-line\n//   }, []);\n//   if (loading || logs === null) {\n//     return <Preloader />;\n//   }\n//   return (\n//     <ul className='collection with-header'>\n//       <li className='collection-header'>\n//         <h4 className='center'>System Logs</h4>\n//       </li>\n//       {!loading && logs.length === 0 ? (\n//         <p className='center'>No logs to show...</p>\n//       ) : (\n//         logs.map(log => <LogItem log={log} key={log.id} />)\n//       )}\n//     </ul>\n//   );\n// };\n// Logs.propTypes = {\n//   log: PropTypes.object.isRequired,\n//   getLogs: PropTypes.func.isRequired\n// };\n// const mapStateToProps = state => ({\n//   log: state.log\n// });\n// export default connect(\n//   mapStateToProps,\n//   { getLogs }\n// )(Logs);\nimport React, { useState, useEffect } from 'react';\n\nconst Logs = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        logs = _useState2[0],\n        setLogs = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  useEffect(() => {}, []);\n\n  if (loading == true) {\n    return React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, loading == false && logs.length === 0 ? React.createElement(\"h3\", {\n    className: \"align center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"there is no logs\") : logs.map(log => React.createElement(\"ul\", {\n    className: \"align center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, log.message))));\n};\n\nexport default Logs;","map":{"version":3,"sources":["/Users/mamad/Desktop/it-logger-master/src/components/logs/Logs.js"],"names":["React","useState","useEffect","Logs","logs","setLogs","loading","setLoading","length","map","log","message"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAAwC,OAAxC;;AAEC,MAAMC,IAAI,GAAG,MAAM;AAAA,oBAGGF,QAAQ,CAAC,EAAD,CAHX;AAAA;AAAA,QAGXG,IAHW;AAAA,QAGNC,OAHM;;AAAA,qBAIOJ,QAAQ,CAAC,KAAD,CAJf;AAAA;AAAA,QAIbK,OAJa;AAAA,QAILC,UAJK;;AAMpBL,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,EAFM,CAAT;;AAIE,MAAGI,OAAO,IAAE,IAAZ,EAAiB;AACf,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,IAAE,KAAT,IAAkBF,IAAI,CAACI,MAAL,KAAc,CAAhC,GAAqC;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAArC,GAA6FJ,IAAI,CAACK,GAAL,CAASC,GAAG,IAAI;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,GAAG,CAACC,OAAT,CAA7B,CAAhB,CADhG,CADF;AAKD,CAlBA;;AAmBD,eAAeR,IAAf","sourcesContent":["// import React, { useEffect } from 'react';\n// import { connect } from 'react-redux';\n// import LogItem from './LogItem';\n// import Preloader from '../layout/Preloader';\n// import PropTypes from 'prop-types';\n// import { getLogs } from '../../actions/logActions';\n\n// const Logs = ({ log: { logs, loading }, getLogs }) => {\n//   useEffect(() => {\n//     getLogs();\n//     // eslint-disable-next-line\n//   }, []);\n\n//   if (loading || logs === null) {\n//     return <Preloader />;\n//   }\n\n//   return (\n//     <ul className='collection with-header'>\n//       <li className='collection-header'>\n//         <h4 className='center'>System Logs</h4>\n//       </li>\n//       {!loading && logs.length === 0 ? (\n//         <p className='center'>No logs to show...</p>\n//       ) : (\n//         logs.map(log => <LogItem log={log} key={log.id} />)\n//       )}\n//     </ul>\n//   );\n// };\n\n// Logs.propTypes = {\n//   log: PropTypes.object.isRequired,\n//   getLogs: PropTypes.func.isRequired\n// };\n\n// const mapStateToProps = state => ({\n//   log: state.log\n// });\n\n// export default connect(\n//   mapStateToProps,\n//   { getLogs }\n// )(Logs);\n\nimport React , {useState,useEffect}from 'react';\n\n const Logs = () => {\n\n\n  const [logs,setLogs]=useState([])\nconst [loading,setLoading]=useState(false);\n\nuseEffect(() => {\n\n}, []);\n\n  if(loading==true){\n    return <h4>Loading...</h4>\n  }\n  return (\n    <div>\n      {loading==false && logs.length===0 ? (<h3 className=\"align center\" >there is no logs</h3> ): (logs.map(log => <ul className=\"align center\"><li>{log.message}</li></ul> )) }    \n    </div>\n  )\n}\nexport default Logs;"]},"metadata":{},"sourceType":"module"}